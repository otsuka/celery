# 
msgid ""
msgstr ""
"Project-Id-Version: Celery 3.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-10 16:05+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../whatsnew-3.1.rst:5
msgid "What's new in Celery 3.1 (Cipater)"
msgstr ""

#: ../../whatsnew-3.1.rst:6
msgid "Ask Solem (ask at celeryproject.org)"
msgstr ""

#: ../../whatsnew-3.1.rst:0
msgid "Change history"
msgstr ""

#: ../../whatsnew-3.1.rst:10
msgid ""
"What's new documents describe the changes in major versions, we also have a "
":ref:`changelog` that lists the changes in bugfix releases (0.0.x), while "
"older series are archived under the :ref:`history` section."
msgstr ""

#: ../../whatsnew-3.1.rst:15
msgid ""
"Celery is a simple, flexible and reliable distributed system to process vast"
" amounts of messages, while providing operations with the tools required to "
"maintain such a system."
msgstr ""

#: ../../whatsnew-3.1.rst:19
msgid ""
"It's a task queue with focus on real-time processing, while also supporting "
"task scheduling."
msgstr ""

#: ../../whatsnew-3.1.rst:22
msgid ""
"Celery has a large and diverse community of users and contributors, you "
"should come join us :ref:`on IRC <irc-channel>` or :ref:`our mailing-list "
"<mailing-list>`."
msgstr ""

#: ../../whatsnew-3.1.rst:26
msgid ""
"To read more about Celery you should go read the :ref:`introduction "
"<intro>`."
msgstr ""

#: ../../whatsnew-3.1.rst:28
msgid ""
"While this version is backward compatible with previous versions it's "
"important that you read the following section."
msgstr ""

#: ../../whatsnew-3.1.rst:31
msgid ""
"This version is officially supported on CPython 2.6, 2.7 and 3.3, and also "
"supported on PyPy."
msgstr ""

#: ../../whatsnew-3.1.rst:0
msgid "Table of Contents"
msgstr ""

#: ../../whatsnew-3.1.rst:38
msgid ""
"Make sure you read the important notes before upgrading to this version."
msgstr ""

#: ../../whatsnew-3.1.rst:45
msgid "Preface"
msgstr ""

#: ../../whatsnew-3.1.rst:47
msgid ""
"Deadlocks have long plagued our workers, and while uncommon they are not "
"acceptable.  They are also infamous for being extremely hard to diagnose and"
" reproduce, so to make this job easier I wrote a stress test suite that "
"bombards the worker with different tasks in an attempt to break it."
msgstr ""

#: ../../whatsnew-3.1.rst:52
msgid ""
"What happens if thousands of worker child processes are killed every second?"
" what if we also kill the broker connection every 10 seconds?  These are "
"examples of what the stress test suite will do to the worker, and it reruns "
"these tests using different configuration combinations to find edge case "
"bugs."
msgstr ""

#: ../../whatsnew-3.1.rst:58
msgid ""
"The end result was that I had to rewrite the prefork pool to avoid the use "
"of the POSIX semaphore.  This was extremely challenging, but after months of"
" hard work the worker now finally passes the stress test suite."
msgstr ""

#: ../../whatsnew-3.1.rst:62
msgid ""
"There's probably more bugs to find, but the good news is that we now have a "
"tool to reproduce them, so should you be so unlucky to experience a bug then"
" we'll write a test for it and squash it!"
msgstr ""

#: ../../whatsnew-3.1.rst:66
msgid ""
"Note that I have also moved many broker transports into experimental status:"
" the only transports recommended for production use today is RabbitMQ and "
"Redis."
msgstr ""

#: ../../whatsnew-3.1.rst:70
msgid ""
"I don't have the resources to maintain all of them, so bugs are left "
"unresolved.  I wish that someone will step up and take responsibility for "
"these transports or donate resources to improve them, but  as the situation "
"is now I don't think the quality is up to date with the rest of the code-"
"base so I cannot recommend them for production use."
msgstr ""

#: ../../whatsnew-3.1.rst:76
msgid ""
"The next version of Celery 3.2 will focus on performance and removing rarely"
" used parts of the library.  Work has also started on a new message "
"protocol, supporting multiple languages and more.  The initial draft can be "
"found :ref:`here <message-protocol-task-v2`."
msgstr ""

#: ../../whatsnew-3.1.rst:81
msgid ""
"This has probably been the hardest release I've worked on, so no "
"introduction to this changelog would be complete without a massive thank you"
" to everyone who contributed and helped me test it!"
msgstr ""

#: ../../whatsnew-3.1.rst:85
msgid "Thank you for your support!"
msgstr ""

#: ../../whatsnew-3.1.rst:87
msgid "*â€” Ask Solem*"
msgstr ""

#: ../../whatsnew-3.1.rst:92
msgid "Important Notes"
msgstr ""

#: ../../whatsnew-3.1.rst:95
msgid "Dropped support for Python 2.5"
msgstr ""

#: ../../whatsnew-3.1.rst:97
msgid "Celery now requires Python 2.6 or later."
msgstr ""

#: ../../whatsnew-3.1.rst:99
msgid ""
"The new dual code base runs on both Python 2 and 3, without requiring the "
"``2to3`` porting tool."
msgstr ""

#: ../../whatsnew-3.1.rst:104
msgid ""
"This is also the last version to support Python 2.6! From Celery 3.2 and "
"onwards Python 2.7 or later will be required."
msgstr ""

#: ../../whatsnew-3.1.rst:108
msgid "Last version to enable Pickle by default"
msgstr ""

#: ../../whatsnew-3.1.rst:110
msgid "Starting from Celery 3.2 the default serializer will be json."
msgstr ""

#: ../../whatsnew-3.1.rst:112
msgid ""
"If you depend on pickle being accepted you should be prepared for this "
"change by explicitly allowing your worker to consume pickled messages using "
"the :setting:`CELERY_ACCEPT_CONTENT` setting:"
msgstr ""

#: ../../whatsnew-3.1.rst:121
msgid ""
"Make sure you only select the serialization formats you'll actually be "
"using, and make sure you have properly secured your broker from unwanted "
"access (see the :ref:`Security Guide <guide-security>`)."
msgstr ""

#: ../../whatsnew-3.1.rst:125
msgid ""
"The worker will emit a deprecation warning if you don't define this setting."
msgstr ""

#: ../../whatsnew-3.1.rst:0
msgid "for Kombu users"
msgstr ""

#: ../../whatsnew-3.1.rst:129
msgid ""
"Kombu 3.0 no longer accepts pickled messages by default, so if you use Kombu"
" directly then you have to configure your consumers: see the :ref:`Kombu 3.0"
" Changelog <kombu:version-3.0.0>` for more information."
msgstr ""

#: ../../whatsnew-3.1.rst:135
msgid "Old command-line programs removed and deprecated"
msgstr ""

#: ../../whatsnew-3.1.rst:137
msgid ""
"Everyone should move to the new :program:`celery` umbrella command, so we "
"are incrementally deprecating the old command names."
msgstr ""

#: ../../whatsnew-3.1.rst:140
msgid ""
"In this version we've removed all commands that are not used in init "
"scripts.  The rest will be removed in 3.2."
msgstr ""

#: ../../whatsnew-3.1.rst:144
msgid "Program"
msgstr ""

#: ../../whatsnew-3.1.rst:144
msgid "New Status"
msgstr ""

#: ../../whatsnew-3.1.rst:144
msgid "Replacement"
msgstr ""

#: ../../whatsnew-3.1.rst:146
msgid "``celeryd``"
msgstr ""

#: ../../whatsnew-3.1.rst:146 ../../whatsnew-3.1.rst:148
#: ../../whatsnew-3.1.rst:150
msgid "*DEPRECATED*"
msgstr ""

#: ../../whatsnew-3.1.rst:146
msgid ":program:`celery worker`"
msgstr ""

#: ../../whatsnew-3.1.rst:148
msgid "``celerybeat``"
msgstr ""

#: ../../whatsnew-3.1.rst:148
msgid ":program:`celery beat`"
msgstr ""

#: ../../whatsnew-3.1.rst:150
msgid "``celeryd-multi``"
msgstr ""

#: ../../whatsnew-3.1.rst:150
msgid ":program:`celery multi`"
msgstr ""

#: ../../whatsnew-3.1.rst:152
msgid "``celeryctl``"
msgstr ""

#: ../../whatsnew-3.1.rst:152 ../../whatsnew-3.1.rst:154
#: ../../whatsnew-3.1.rst:156
msgid "**REMOVED**"
msgstr ""

#: ../../whatsnew-3.1.rst:152
msgid ":program:`celery inspect|control`"
msgstr ""

#: ../../whatsnew-3.1.rst:154
msgid "``celeryev``"
msgstr ""

#: ../../whatsnew-3.1.rst:154
msgid ":program:`celery events`"
msgstr ""

#: ../../whatsnew-3.1.rst:156
msgid "``camqadm``"
msgstr ""

#: ../../whatsnew-3.1.rst:156
msgid ":program:`celery amqp`"
msgstr ""

#: ../../whatsnew-3.1.rst:159
msgid ""
"If this is not a new installation then you may want to remove the old "
"commands:"
msgstr ""

#: ../../whatsnew-3.1.rst:170
msgid ""
"Please run :program:`celery --help` for help using the umbrella command."
msgstr ""

#: ../../whatsnew-3.1.rst:175
msgid "News"
msgstr ""

#: ../../whatsnew-3.1.rst:178
msgid "Prefork Pool Improvements"
msgstr ""

#: ../../whatsnew-3.1.rst:180
msgid ""
"These improvements are only active if you use an async capable transport.  "
"This means only RabbitMQ (AMQP) and Redis are supported at this point and "
"other transports will still use the thread-based fallback implementation."
msgstr ""

#: ../../whatsnew-3.1.rst:185
msgid "Pool is now using one IPC queue per child process."
msgstr ""

#: ../../whatsnew-3.1.rst:187
msgid ""
"Previously the pool shared one queue between all child processes, using a "
"POSIX semaphore as a mutex to achieve exclusive read and write access."
msgstr ""

#: ../../whatsnew-3.1.rst:191
msgid ""
"The POSIX semaphore has now been removed and each child process gets a "
"dedicated queue.  This means that the worker will require more file "
"descriptors (two descriptors per process), but it also means that "
"performance is improved and we can send work to individual child processes."
msgstr ""

#: ../../whatsnew-3.1.rst:197
msgid ""
"POSIX semaphores are not released when a process is killed, so killing "
"processes could lead to a deadlock if it happened while the semaphore was "
"acquired.  There is no good solution to fix this, so the best option was to "
"remove the semaphore."
msgstr ""

#: ../../whatsnew-3.1.rst:202
msgid "Asynchronous write operations"
msgstr ""

#: ../../whatsnew-3.1.rst:204
msgid "The pool now uses async I/O to send work to the child processes."
msgstr ""

#: ../../whatsnew-3.1.rst:206
msgid "Lost process detection is now immediate."
msgstr ""

#: ../../whatsnew-3.1.rst:208
msgid ""
"If a child process is killed or exits mysteriously the pool previously had "
"to wait for 30 seconds before marking the task with a "
":exc:`~celery.exceptions.WorkerLostError`.  It had to do this because the "
"outqueue was shared between all processes, and the pool could not be certain"
" whether the process completed the task or not.  So an arbitrary timeout of "
"30 seconds was chosen, as it was believed that the outqueue would have been "
"drained by this point."
msgstr ""

#: ../../whatsnew-3.1.rst:216
msgid ""
"This timeout is no longer necessary, and so the task can be marked as failed"
" as soon as the pool gets the notification that the process exited."
msgstr ""

#: ../../whatsnew-3.1.rst:219
msgid "Rare race conditions fixed"
msgstr ""

#: ../../whatsnew-3.1.rst:221
msgid ""
"Most of these bugs were never reported to us, but was discovered while "
"running the new stress test suite."
msgstr ""

#: ../../whatsnew-3.1.rst:225
msgid "Caveats"
msgstr ""

#: ../../whatsnew-3.1.rst:0
msgid "Long running tasks"
msgstr ""

#: ../../whatsnew-3.1.rst:229
msgid ""
"The new pool will send tasks to a child process as long as the process "
"inqueue is writable, and since the socket is buffered this means that the "
"processes are, in effect, prefetching tasks."
msgstr ""

#: ../../whatsnew-3.1.rst:233
msgid ""
"This benefits performance but it also means that other tasks may be stuck "
"waiting for a long running task to complete::"
msgstr ""

#: ../../whatsnew-3.1.rst:246
msgid ""
"The buffer size varies based on the operating system: some may have a buffer"
" as small as 64kb but on recent Linux versions the buffer size is 1MB (can "
"only be changed system wide)."
msgstr ""

#: ../../whatsnew-3.1.rst:250
msgid ""
"You can disable this prefetching behavior by enabling the :option:`-Ofair` "
"worker option:"
msgstr ""

#: ../../whatsnew-3.1.rst:257
msgid ""
"With this option enabled the worker will only write to workers that are "
"available for work, disabling the prefetch behavior."
msgstr ""

#: ../../whatsnew-3.1.rst:0
msgid "Max tasks per child"
msgstr ""

#: ../../whatsnew-3.1.rst:262
msgid ""
"If a process exits and pool prefetch is enabled the worker may have already "
"written many tasks to the process inqueue, and these tasks must then be "
"moved back and rewritten to a new process."
msgstr ""

#: ../../whatsnew-3.1.rst:266
msgid ""
"This is very expensive if you have ``--maxtasksperchild`` set to a low value"
" (e.g. less than 10), so if you need to enable this option you should also "
"enable ``-Ofair`` to turn off the prefetching behavior."
msgstr ""

#: ../../whatsnew-3.1.rst:271
msgid "Django supported out of the box"
msgstr ""

#: ../../whatsnew-3.1.rst:273
msgid ""
"Celery 3.0 introduced a shiny new API, but unfortunately did not have a "
"solution for Django users."
msgstr ""

#: ../../whatsnew-3.1.rst:276
msgid ""
"The situation changes with this version as Django is now supported in core "
"and new Django users coming to Celery are now expected to use the new API "
"directly."
msgstr ""

#: ../../whatsnew-3.1.rst:280
msgid ""
"The Django community has a convention where there's a separate django-x "
"package for every library, acting like a bridge between Django and the "
"library."
msgstr ""

#: ../../whatsnew-3.1.rst:284
msgid ""
"Having a separate project for Django users has been a pain for Celery, with "
"multiple issue trackers and multiple documentation sources, and then lastly "
"since 3.0 we even had different APIs."
msgstr ""

#: ../../whatsnew-3.1.rst:288
msgid ""
"With this version we challenge that convention and Django users will use the"
" same library, the same API and the same documentation as everyone else."
msgstr ""

#: ../../whatsnew-3.1.rst:292
msgid ""
"There is no rush to port your existing code to use the new API, but if you "
"would like to experiment with it you should know that:"
msgstr ""

#: ../../whatsnew-3.1.rst:295
msgid "You need to use a Celery application instance."
msgstr ""

#: ../../whatsnew-3.1.rst:297
msgid ""
"The new Celery API introduced in 3.0 requires users to instantiate the "
"library by creating an application:"
msgstr ""

#: ../../whatsnew-3.1.rst:306
msgid "You need to explicitly integrate Celery with Django"
msgstr ""

#: ../../whatsnew-3.1.rst:308
msgid ""
"Celery will not automatically use the Django settings, so you can either "
"configure Celery separately or you can tell it to use the Django settings "
"with:"
msgstr ""

#: ../../whatsnew-3.1.rst:316
msgid ""
"Neither will it automatically traverse your installed apps to find task "
"modules, but this still available as an option you must enable:"
msgstr ""

#: ../../whatsnew-3.1.rst:324
msgid "You no longer use ``manage.py``"
msgstr ""

#: ../../whatsnew-3.1.rst:326
msgid "Instead you use the :program:`celery` command directly:"
msgstr ""

#: ../../whatsnew-3.1.rst:332
msgid ""
"For this to work your app module must store the  "
":envvar:`DJANGO_SETTINGS_MODULE` environment variable, see the example in "
"the :ref:`Django guide <django-first-steps>`."
msgstr ""

#: ../../whatsnew-3.1.rst:336
msgid ""
"To get started with the new API you should first read the :ref:`first-steps`"
" tutorial, and then you should read the Django specific instructions in :ref"
":`django-first-steps`."
msgstr ""

#: ../../whatsnew-3.1.rst:340
msgid ""
"The fixes and improvements applied by the django-celery library are now "
"automatically applied by core Celery when it detects that the "
":envvar:`DJANGO_SETTINGS_MODULE` environment variable is set."
msgstr ""

#: ../../whatsnew-3.1.rst:344
msgid ""
"The distribution ships with a new example project using Django in "
":file:`examples/django`:"
msgstr ""

#: ../../whatsnew-3.1.rst:347
msgid "http://github.com/celery/celery/tree/3.1/examples/django"
msgstr ""

#: ../../whatsnew-3.1.rst:349
msgid "Some features still require the :mod:`django-celery` library:"
msgstr ""

#: ../../whatsnew-3.1.rst:351
msgid ""
"Celery does not implement the Django database or cache result backends."
msgstr ""

#: ../../whatsnew-3.1.rst:353
msgid "Celery does not ship with the database-based periodic task"
msgstr ""

#: ../../whatsnew-3.1.rst:353
msgid "scheduler."
msgstr ""

#: ../../whatsnew-3.1.rst:357
msgid ""
"If you're still using the old API when you upgrade to Celery 3.1 then you "
"must make sure that your settings module contains the "
"``djcelery.setup_loader()`` line, since this will no longer happen as a "
"side-effect of importing the :mod:`djcelery` module."
msgstr ""

#: ../../whatsnew-3.1.rst:363
msgid ""
"New users (or if you have ported to the new API) don't need the "
"``setup_loader`` line anymore, and must make sure to remove it."
msgstr ""

#: ../../whatsnew-3.1.rst:367
msgid "Events are now ordered using logical time"
msgstr ""

#: ../../whatsnew-3.1.rst:369
msgid ""
"Keeping physical clocks in perfect sync is impossible, so using timestamps "
"to order events in a distributed system is not reliable."
msgstr ""

#: ../../whatsnew-3.1.rst:372
msgid ""
"Celery event messages have included a logical clock value for some time, but"
" starting with this version that field is also used to order them."
msgstr ""

#: ../../whatsnew-3.1.rst:375
msgid ""
"Also, events now record timezone information by including a new "
"``utcoffset`` field in the event message. This is a signed integer telling "
"the difference from UTC time in hours, so e.g. an even sent from the "
"Europe/London timezone in daylight savings time will have an offset of 1."
msgstr ""

#: ../../whatsnew-3.1.rst:381
msgid ""
":class:`@events.Receiver` will automatically convert the timestamps to the "
"local timezone."
msgstr ""

#: ../../whatsnew-3.1.rst:386
msgid ""
"The logical clock is synchronized with other nodes in the same cluster "
"(neighbors), so this means that the logical epoch will start at the point "
"when the first worker in the cluster starts."
msgstr ""

#: ../../whatsnew-3.1.rst:391
msgid ""
"If all of the workers are shutdown the clock value will be lost and reset to"
" 0, to protect against this you should specify a :option:`--statedb` so that"
" the worker can persist the clock value at shutdown."
msgstr ""

#: ../../whatsnew-3.1.rst:396
msgid ""
"You may notice that the logical clock is an integer value and increases very"
" rapidly.  Do not worry about the value overflowing though, as even in the "
"most busy clusters it may take several millennia before the clock exceeds a "
"64 bits value."
msgstr ""

#: ../../whatsnew-3.1.rst:402
msgid "New worker node name format (``name@host``)"
msgstr ""

#: ../../whatsnew-3.1.rst:404
msgid ""
"Node names are now constructed by two elements: name and hostname separated "
"by '@'."
msgstr ""

#: ../../whatsnew-3.1.rst:406
msgid ""
"This change was made to more easily identify multiple instances running on "
"the same machine."
msgstr ""

#: ../../whatsnew-3.1.rst:409
msgid ""
"If a custom name is not specified then the worker will use the name 'celery'"
" by default, resulting in a fully qualified node name of 'celery@hostname':"
msgstr ""

#: ../../whatsnew-3.1.rst:418
msgid "To also set the name you must include the @:"
msgstr ""

#: ../../whatsnew-3.1.rst:425
msgid ""
"The worker will identify itself using the fully qualified node name in "
"events and broadcast messages, so where before a worker would identify "
"itself as 'worker1.example.com', it will now use "
"'celery@worker1.example.com'."
msgstr ""

#: ../../whatsnew-3.1.rst:430
msgid ""
"Remember that the ``-n`` argument also supports simple variable "
"substitutions, so if the current hostname is *george.example.com* then the "
"``%h`` macro will expand into that:"
msgstr ""

#: ../../whatsnew-3.1.rst:439
msgid "The available substitutions are as follows:"
msgstr ""

#: ../../whatsnew-3.1.rst:442
msgid "Variable"
msgstr ""

#: ../../whatsnew-3.1.rst:442
msgid "Substitution"
msgstr ""

#: ../../whatsnew-3.1.rst:444
msgid "``%h``"
msgstr ""

#: ../../whatsnew-3.1.rst:444
msgid "Full hostname (including domain name)"
msgstr ""

#: ../../whatsnew-3.1.rst:446
msgid "``%d``"
msgstr ""

#: ../../whatsnew-3.1.rst:446
msgid "Domain name only"
msgstr ""

#: ../../whatsnew-3.1.rst:448
msgid "``%n``"
msgstr ""

#: ../../whatsnew-3.1.rst:448
msgid "Hostname only (without domain name)"
msgstr ""

#: ../../whatsnew-3.1.rst:450
msgid "``%%``"
msgstr ""

#: ../../whatsnew-3.1.rst:450
msgid "The character ``%``"
msgstr ""

#: ../../whatsnew-3.1.rst:454
msgid "Bound tasks"
msgstr ""

#: ../../whatsnew-3.1.rst:456
msgid ""
"The task decorator can now create \"bound tasks\", which means that the task"
" will receive the ``self`` argument."
msgstr ""

#: ../../whatsnew-3.1.rst:469
msgid ""
"Using *bound tasks* is now the recommended approach whenever you need access"
" to the task instance or request context. Previously one would have to refer"
" to the name of the task instead (``send_twitter_status.retry``), but this "
"could lead to problems in some configurations."
msgstr ""

#: ../../whatsnew-3.1.rst:476
msgid "Mingle: Worker synchronization"
msgstr ""

#: ../../whatsnew-3.1.rst:478
msgid ""
"The worker will now attempt to synchronize with other workers in the same "
"cluster."
msgstr ""

#: ../../whatsnew-3.1.rst:481
msgid "Synchronized data currently includes revoked tasks and logical clock."
msgstr ""

#: ../../whatsnew-3.1.rst:483
msgid ""
"This only happens at startup and causes a one second startup delay to "
"collect broadcast responses from other workers."
msgstr ""

#: ../../whatsnew-3.1.rst:486
msgid "You can disable this bootstep using the ``--without-mingle`` argument."
msgstr ""

#: ../../whatsnew-3.1.rst:489
msgid "Gossip: Worker <-> Worker communication"
msgstr ""

#: ../../whatsnew-3.1.rst:491
msgid ""
"Workers are now passively subscribing to worker related events like "
"heartbeats."
msgstr ""

#: ../../whatsnew-3.1.rst:494
msgid ""
"This means that a worker knows what other workers are doing and can detect "
"if they go offline.  Currently this is only used for clock synchronization, "
"but there are many possibilities for future additions and you can write "
"extensions that take advantage of this already."
msgstr ""

#: ../../whatsnew-3.1.rst:499
msgid ""
"Some ideas include consensus protocols, reroute task to best worker (based "
"on resource usage or data locality) or restarting workers when they crash."
msgstr ""

#: ../../whatsnew-3.1.rst:502
msgid ""
"We believe that this is a small addition but one that really opens up for "
"amazing possibilities."
msgstr ""

#: ../../whatsnew-3.1.rst:505
msgid "You can disable this bootstep using the ``--without-gossip`` argument."
msgstr ""

#: ../../whatsnew-3.1.rst:508
msgid "Bootsteps: Extending the worker"
msgstr ""

#: ../../whatsnew-3.1.rst:510
msgid ""
"By writing bootsteps you can now easily extend the consumer part of the "
"worker to add additional features, like custom message consumers."
msgstr ""

#: ../../whatsnew-3.1.rst:513
msgid ""
"The worker has been using bootsteps for some time, but these were never "
"documented.  In this version the consumer part of the worker has also been "
"rewritten to use bootsteps and the new :ref:`guide-extending` guide "
"documents examples extending the worker, including adding custom message "
"consumers."
msgstr ""

#: ../../whatsnew-3.1.rst:519 ../../whatsnew-3.1.rst:726
msgid "See the :ref:`guide-extending` guide for more information."
msgstr ""

#: ../../whatsnew-3.1.rst:523
msgid ""
"Bootsteps written for older versions will not be compatible with this "
"version, as the API has changed significantly."
msgstr ""

#: ../../whatsnew-3.1.rst:526
msgid ""
"The old API was experimental and internal but should you be so unlucky to "
"use it then please contact the mailing-list and we will help you port the "
"bootstep to the new API."
msgstr ""

#: ../../whatsnew-3.1.rst:531
msgid "New RPC result backend"
msgstr ""

#: ../../whatsnew-3.1.rst:533
msgid ""
"This new experimental version of the ``amqp`` result backend is a good "
"alternative to use in classical RPC scenarios, where the process that "
"initiates the task is always the process to retrieve the result."
msgstr ""

#: ../../whatsnew-3.1.rst:537
msgid ""
"It uses Kombu to send and retrieve results, and each client uses a unique "
"queue for replies to be sent to.  This avoids the significant overhead of "
"the original amqp result backend which creates one queue per task."
msgstr ""

#: ../../whatsnew-3.1.rst:542
msgid ""
"By default results sent using this backend will not persist, so they won't "
"survive a broker restart.  You can enable the "
":setting:`CELERY_RESULT_PERSISTENT` setting to change that."
msgstr ""

#: ../../whatsnew-3.1.rst:551
msgid "Note that chords are currently not supported by the RPC backend."
msgstr ""

#: ../../whatsnew-3.1.rst:554
msgid "Time limits can now be set by the client"
msgstr ""

#: ../../whatsnew-3.1.rst:556
msgid ""
"Two new options have been added to the Calling API: ``time_limit`` and "
"``soft_time_limit``:"
msgstr ""

#: ../../whatsnew-3.1.rst:567 ../../whatsnew-3.1.rst:804
msgid "Contributed by Mher Movsisyan."
msgstr ""

#: ../../whatsnew-3.1.rst:570
msgid "Redis: Broadcast messages and virtual hosts"
msgstr ""

#: ../../whatsnew-3.1.rst:572
msgid ""
"Broadcast messages are currently seen by all virtual hosts when using the "
"Redis transport.  You can now fix this by enabling a prefix to all channels "
"so that the messages are separated:"
msgstr ""

#: ../../whatsnew-3.1.rst:580
msgid ""
"Note that you'll not be able to communicate with workers running older "
"versions or workers that does not have this setting enabled."
msgstr ""

#: ../../whatsnew-3.1.rst:583
msgid "This setting will be the default in a future version."
msgstr ""

#: ../../whatsnew-3.1.rst:585
msgid "Related to Issue #1490."
msgstr ""

#: ../../whatsnew-3.1.rst:588
msgid ":mod:`pytz` replaces ``python-dateutil`` dependency"
msgstr ""

#: ../../whatsnew-3.1.rst:590
msgid ""
"Celery no longer depends on the ``python-dateutil`` library, but instead a "
"new dependency on the :mod:`pytz` library was added."
msgstr ""

#: ../../whatsnew-3.1.rst:593
msgid ""
"The :mod:`pytz` library was already recommended for accurate timezone "
"support."
msgstr ""

#: ../../whatsnew-3.1.rst:595
msgid ""
"This also means that dependencies are the same for both Python 2 and Python "
"3, and that the :file:`requirements/default-py3k.txt` file has been removed."
msgstr ""

#: ../../whatsnew-3.1.rst:600
msgid "Support for Setuptools extra requirements"
msgstr ""

#: ../../whatsnew-3.1.rst:602
msgid ""
"Pip now supports the :mod:`setuptools` extra requirements format, so we have"
" removed the old bundles concept, and instead specify setuptools extras."
msgstr ""

#: ../../whatsnew-3.1.rst:606
msgid "You install extras by specifying them inside brackets:"
msgstr ""

#: ../../whatsnew-3.1.rst:612
msgid ""
"The above will install the dependencies for Redis and MongoDB.  You can list"
" as many extras as you want."
msgstr ""

#: ../../whatsnew-3.1.rst:618
msgid ""
"You can't use the ``celery-with-*`` packages anymore, as these will not be "
"updated to use Celery 3.1."
msgstr ""

#: ../../whatsnew-3.1.rst:622
msgid "Extension"
msgstr ""

#: ../../whatsnew-3.1.rst:622
msgid "Requirement entry"
msgstr ""

#: ../../whatsnew-3.1.rst:622
msgid "Type"
msgstr ""

#: ../../whatsnew-3.1.rst:624
msgid "Redis"
msgstr ""

#: ../../whatsnew-3.1.rst:624
msgid "``celery[redis]``"
msgstr ""

#: ../../whatsnew-3.1.rst:624 ../../whatsnew-3.1.rst:626
#: ../../whatsnew-3.1.rst:636
msgid "transport, result backend"
msgstr ""

#: ../../whatsnew-3.1.rst:626
msgid "MongoDB"
msgstr ""

#: ../../whatsnew-3.1.rst:626
msgid "``celery[mongodb]``"
msgstr ""

#: ../../whatsnew-3.1.rst:628
msgid "CouchDB"
msgstr ""

#: ../../whatsnew-3.1.rst:628
msgid "``celery[couchdb]``"
msgstr ""

#: ../../whatsnew-3.1.rst:628 ../../whatsnew-3.1.rst:630
#: ../../whatsnew-3.1.rst:632 ../../whatsnew-3.1.rst:634
msgid "transport"
msgstr ""

#: ../../whatsnew-3.1.rst:630
msgid "Beanstalk"
msgstr ""

#: ../../whatsnew-3.1.rst:630
msgid "``celery[beanstalk]``"
msgstr ""

#: ../../whatsnew-3.1.rst:632
msgid "ZeroMQ"
msgstr ""

#: ../../whatsnew-3.1.rst:632
msgid "``celery[zeromq]``"
msgstr ""

#: ../../whatsnew-3.1.rst:634
msgid "Zookeeper"
msgstr ""

#: ../../whatsnew-3.1.rst:634
msgid "``celery[zookeeper]``"
msgstr ""

#: ../../whatsnew-3.1.rst:636
msgid "SQLAlchemy"
msgstr ""

#: ../../whatsnew-3.1.rst:636
msgid "``celery[sqlalchemy]``"
msgstr ""

#: ../../whatsnew-3.1.rst:638
msgid "librabbitmq"
msgstr ""

#: ../../whatsnew-3.1.rst:638
msgid "``celery[librabbitmq]``"
msgstr ""

#: ../../whatsnew-3.1.rst:638
msgid "transport (C amqp client)"
msgstr ""

#: ../../whatsnew-3.1.rst:641
msgid ""
"The complete list with examples is found in the :ref:`bundles` section."
msgstr ""

#: ../../whatsnew-3.1.rst:644
msgid "``subtask.__call__()`` now executes the task directly"
msgstr ""

#: ../../whatsnew-3.1.rst:646
msgid ""
"A misunderstanding led to ``Signature.__call__`` being an alias of "
"``.delay`` but this does not conform to the calling API of ``Task`` which "
"calls the underlying task method."
msgstr ""

#: ../../whatsnew-3.1.rst:650
msgid "This means that:"
msgstr ""

#: ../../whatsnew-3.1.rst:660
msgid "now does the same as calling the task directly:"
msgstr ""

#: ../../whatsnew-3.1.rst:667
msgid "In Other News"
msgstr ""

#: ../../whatsnew-3.1.rst:669
msgid "Now depends on :ref:`Kombu 3.0 <kombu:version-3.0.0>`."
msgstr ""

#: ../../whatsnew-3.1.rst:671
msgid "Now depends on :mod:`billiard` version 3.3."
msgstr ""

#: ../../whatsnew-3.1.rst:673
msgid "Worker will now crash if running as the root user with pickle enabled."
msgstr ""

#: ../../whatsnew-3.1.rst:675
msgid ""
"Canvas: ``group.apply_async`` and ``chain.apply_async`` no longer starts "
"separate task."
msgstr ""

#: ../../whatsnew-3.1.rst:678
msgid ""
"That the group and chord primitives supported the \"calling API\" like other"
" subtasks was a nice idea, but it was useless in practice and often confused"
" users.  If you still want this behavior you can define a task to do it for "
"you."
msgstr ""

#: ../../whatsnew-3.1.rst:683
msgid ""
"New method ``Signature.freeze()`` can be used to \"finalize\" "
"signatures/subtask."
msgstr ""

#: ../../whatsnew-3.1.rst:686
msgid "Regular signature:"
msgstr ""

#: ../../whatsnew-3.1.rst:697
msgid "Group:"
msgstr ""

#: ../../whatsnew-3.1.rst:709
msgid ""
"New ability to specify additional command line options to the worker and "
"beat programs."
msgstr ""

#: ../../whatsnew-3.1.rst:712
msgid ""
"The :attr:`@Celery.user_options` attribute can be used to add additional "
"command-line arguments, and expects optparse-style options:"
msgstr ""

#: ../../whatsnew-3.1.rst:728
msgid ""
"All events now include a ``pid`` field, which is the process id of the "
"process that sent the event."
msgstr ""

#: ../../whatsnew-3.1.rst:731
msgid ""
"Event heartbeats are now calculated based on the time when the event was "
"received by the monitor, and not the time reported by the worker."
msgstr ""

#: ../../whatsnew-3.1.rst:734
msgid ""
"This means that a worker with an out-of-sync clock will no longer show as "
"'Offline' in monitors."
msgstr ""

#: ../../whatsnew-3.1.rst:737
msgid ""
"A warning is now emitted if the difference between the senders time and the "
"internal time is greater than 15 seconds, suggesting that the clocks are out"
" of sync."
msgstr ""

#: ../../whatsnew-3.1.rst:741
msgid "Monotonic clock support."
msgstr ""

#: ../../whatsnew-3.1.rst:743
msgid "A monotonic clock is now used for timeouts and scheduling."
msgstr ""

#: ../../whatsnew-3.1.rst:745
msgid ""
"The monotonic clock function is built-in starting from Python 3.4, but we "
"also have fallback implementations for Linux and OS X."
msgstr ""

#: ../../whatsnew-3.1.rst:748
msgid ""
":program:`celery worker` now supports a ``--detach`` argument to start the "
"worker as a daemon in the background."
msgstr ""

#: ../../whatsnew-3.1.rst:751
msgid ""
":class:`@events.Receiver` now sets a ``local_received`` field for incoming "
"events, which is set to the time of when the event was received."
msgstr ""

#: ../../whatsnew-3.1.rst:754
msgid ""
":class:`@events.Dispatcher` now accepts a ``groups`` argument which decides "
"a white-list of event groups that will be sent."
msgstr ""

#: ../../whatsnew-3.1.rst:757
msgid ""
"The type of an event is a string separated by '-', where the part before the"
" first '-' is the group.  Currently there are only two groups: ``worker`` "
"and ``task``."
msgstr ""

#: ../../whatsnew-3.1.rst:761
msgid "A dispatcher instantiated as follows:"
msgstr ""

#: ../../whatsnew-3.1.rst:767
msgid ""
"will only send worker related events and silently drop any attempts to send "
"events related to any other group."
msgstr ""

#: ../../whatsnew-3.1.rst:770
msgid "New :setting:`BROKER_FAILOVER_STRATEGY` setting."
msgstr ""

#: ../../whatsnew-3.1.rst:772
msgid ""
"This setting can be used to change the transport failover strategy, can "
"either be a callable returning an iterable or the name of a Kombu built-in "
"failover strategy.  Default is \"round-robin\"."
msgstr ""

#: ../../whatsnew-3.1.rst:776
msgid "Contributed by Matt Wise."
msgstr ""

#: ../../whatsnew-3.1.rst:778
msgid "``Result.revoke`` will no longer wait for replies."
msgstr ""

#: ../../whatsnew-3.1.rst:780
msgid ""
"You can add the ``reply=True`` argument if you really want to wait for "
"responses from the workers."
msgstr ""

#: ../../whatsnew-3.1.rst:783
msgid "Better support for link and link_error tasks for chords."
msgstr ""

#: ../../whatsnew-3.1.rst:785
msgid "Contributed by Steeve Morin."
msgstr ""

#: ../../whatsnew-3.1.rst:787
msgid ""
"Worker: Now emits warning if the :setting:`CELERYD_POOL` setting is set to "
"enable the eventlet/gevent pools."
msgstr ""

#: ../../whatsnew-3.1.rst:790
msgid ""
"The `-P` option should always be used to select the eventlet/gevent pool to "
"ensure that the patches are applied as early as possible."
msgstr ""

#: ../../whatsnew-3.1.rst:793
msgid ""
"If you start the worker in a wrapper (like Django's manage.py) then you must"
" apply the patches manually, e.g. by creating an alternative wrapper that "
"monkey patches at the start of the program before importing any other "
"modules."
msgstr ""

#: ../../whatsnew-3.1.rst:798
msgid ""
"There's a now an 'inspect clock' command which will collect the current "
"logical clock value from workers."
msgstr ""

#: ../../whatsnew-3.1.rst:801
msgid ""
"`celery inspect stats` now contains the process id of the worker's main "
"process."
msgstr ""

#: ../../whatsnew-3.1.rst:806
msgid "New remote control command to dump a workers configuration."
msgstr ""

#: ../../whatsnew-3.1.rst:808
msgid "Example:"
msgstr ""

#: ../../whatsnew-3.1.rst:814
msgid ""
"Configuration values will be converted to values supported by JSON where "
"possible."
msgstr ""

#: ../../whatsnew-3.1.rst:817
msgid "Contributed by Mher Movisyan."
msgstr ""

#: ../../whatsnew-3.1.rst:819
msgid ""
"New settings :setting:`CELERY_EVENT_QUEUE_TTL` and "
":setting:`CELERY_EVENT_QUEUE_EXPIRES`."
msgstr ""

#: ../../whatsnew-3.1.rst:822
msgid ""
"These control when a monitors event queue is deleted, and for how long "
"events published to that queue will be visible.  Only supported on RabbitMQ."
msgstr ""

#: ../../whatsnew-3.1.rst:826
msgid "New Couchbase result backend."
msgstr ""

#: ../../whatsnew-3.1.rst:828
msgid ""
"This result backend enables you to store and retrieve task results using "
"`Couchbase`_."
msgstr ""

#: ../../whatsnew-3.1.rst:831
msgid ""
"See :ref:`conf-couchbase-result-backend` for more information about "
"configuring this result backend."
msgstr ""

#: ../../whatsnew-3.1.rst:834
msgid "Contributed by Alain Masiero."
msgstr ""

#: ../../whatsnew-3.1.rst:838
msgid "CentOS init script now supports starting multiple worker instances."
msgstr ""

#: ../../whatsnew-3.1.rst:840
msgid "See the script header for details."
msgstr ""

#: ../../whatsnew-3.1.rst:842
msgid "Contributed by Jonathan Jordan."
msgstr ""

#: ../../whatsnew-3.1.rst:844
msgid "``AsyncResult.iter_native`` now sets default interval parameter to 0.5"
msgstr ""

#: ../../whatsnew-3.1.rst:846
msgid "Fix contributed by Idan Kamara"
msgstr ""

#: ../../whatsnew-3.1.rst:848
msgid "New setting :setting:`BROKER_LOGIN_METHOD`."
msgstr ""

#: ../../whatsnew-3.1.rst:850
msgid ""
"This setting can be used to specify an alternate login method for the AMQP "
"transports."
msgstr ""

#: ../../whatsnew-3.1.rst:853
msgid "Contributed by Adrien Guinet"
msgstr ""

#: ../../whatsnew-3.1.rst:855
msgid ""
"The ``dump_conf`` remote control command will now give the string "
"representation for types that are not JSON compatible."
msgstr ""

#: ../../whatsnew-3.1.rst:858
msgid ""
"Function `celery.security.setup_security` is now :func:`@setup_security`."
msgstr ""

#: ../../whatsnew-3.1.rst:860
msgid "Task retry now propagates the message expiry value (Issue #980)."
msgstr ""

#: ../../whatsnew-3.1.rst:862
msgid ""
"The value is forwarded at is, so the expiry time will not change. To update "
"the expiry time you would have to pass a new expires argument to "
"``retry()``."
msgstr ""

#: ../../whatsnew-3.1.rst:866
msgid "Worker now crashes if a channel error occurs."
msgstr ""

#: ../../whatsnew-3.1.rst:868
msgid ""
"Channel errors are transport specific and is the list of exceptions returned"
" by ``Connection.channel_errors``. For RabbitMQ this means that Celery will "
"crash if the equivalence checks for one of the queues in "
":setting:`CELERY_QUEUES` mismatches, which makes sense since this is a "
"scenario where manual intervention is required."
msgstr ""

#: ../../whatsnew-3.1.rst:875
msgid ""
"Calling ``AsyncResult.get()`` on a chain now propagates errors for previous "
"tasks (Issue #1014)."
msgstr ""

#: ../../whatsnew-3.1.rst:878
msgid ""
"The parent attribute of ``AsyncResult`` is now reconstructed when using JSON"
" serialization (Issue #1014)."
msgstr ""

#: ../../whatsnew-3.1.rst:881
msgid ""
"Worker disconnection logs are now logged with severity warning instead of "
"error."
msgstr ""

#: ../../whatsnew-3.1.rst:884
msgid "Contributed by Chris Adams."
msgstr ""

#: ../../whatsnew-3.1.rst:886
msgid ""
"``events.State`` no longer crashes when it receives unknown event types."
msgstr ""

#: ../../whatsnew-3.1.rst:888
msgid ""
"SQLAlchemy Result Backend: New :setting:`CELERY_RESULT_DB_TABLENAMES` "
"setting can be used to change the name of the database tables used."
msgstr ""

#: ../../whatsnew-3.1.rst:891
msgid "Contributed by Ryan Petrello."
msgstr ""

#: ../../whatsnew-3.1.rst:904
msgid "SQLAlchemy Result Backend: Now calls ``enginge.dispose`` after fork"
msgstr ""

#: ../../whatsnew-3.1.rst:894
msgid "(Issue #1564)."
msgstr ""

#: ../../whatsnew-3.1.rst:896
msgid ""
"If you create your own sqlalchemy engines then you must also make sure that "
"these are closed after fork in the worker:"
msgstr ""

#: ../../whatsnew-3.1.rst:906
msgid "A stress test suite for the Celery worker has been written."
msgstr ""

#: ../../whatsnew-3.1.rst:908
msgid ""
"This is located in the ``funtests/stress`` directory in the git repository. "
"There's a README file there to get you started."
msgstr ""

#: ../../whatsnew-3.1.rst:911
msgid ""
"The logger named ``celery.concurrency`` has been renamed to ``celery.pool``."
msgstr ""

#: ../../whatsnew-3.1.rst:913
msgid "New command line utility ``celery graph``."
msgstr ""

#: ../../whatsnew-3.1.rst:915
msgid "This utility creates graphs in GraphViz dot format."
msgstr ""

#: ../../whatsnew-3.1.rst:917
msgid "You can create graphs from the currently installed bootsteps:"
msgstr ""

#: ../../whatsnew-3.1.rst:931
msgid "Or graphs of workers in a cluster:"
msgstr ""

#: ../../whatsnew-3.1.rst:951
msgid "Changed the way that app instances are pickled."
msgstr ""

#: ../../whatsnew-3.1.rst:953
msgid ""
"Apps can now define a ``__reduce_keys__`` method that is used instead of the"
" old ``AppPickler`` attribute.  E.g. if your app defines a custom 'foo' "
"attribute that needs to be preserved when pickling you can define a "
"``__reduce_keys__`` as such:"
msgstr ""

#: ../../whatsnew-3.1.rst:973
msgid ""
"This is a much more convenient way to add support for pickling custom "
"attributes. The old ``AppPickler`` is still supported but its use is "
"discouraged and we would like to remove it in a future version."
msgstr ""

#: ../../whatsnew-3.1.rst:977
msgid "Ability to trace imports for debugging purposes."
msgstr ""

#: ../../whatsnew-3.1.rst:979
msgid "The :envvar:`C_IMPDEBUG` can be set to trace imports as they occur:"
msgstr ""

#: ../../whatsnew-3.1.rst:990
msgid "Message headers now available as part of the task request."
msgstr ""

#: ../../whatsnew-3.1.rst:992
msgid "Example adding and retrieving a header value:"
msgstr ""

#: ../../whatsnew-3.1.rst:1002
msgid ""
"New :signal:`before_task_publish` signal dispatched before a task message is"
" sent and can be used to modify the final message fields (Issue #1281)."
msgstr ""

#: ../../whatsnew-3.1.rst:1005
msgid ""
"New :signal:`after_task_publish` signal replaces the old :signal:`task_sent`"
" signal."
msgstr ""

#: ../../whatsnew-3.1.rst:1008
msgid ""
"The :signal:`task_sent` signal is now deprecated and should not be used."
msgstr ""

#: ../../whatsnew-3.1.rst:1010
msgid ""
"New :signal:`worker_process_shutdown` signal is dispatched in the prefork "
"pool child processes as they exit."
msgstr ""

#: ../../whatsnew-3.1.rst:1013
msgid "Contributed by Daniel M Taub."
msgstr ""

#: ../../whatsnew-3.1.rst:1015
msgid ""
"``celery.platforms.PIDFile`` renamed to :class:`celery.platforms.Pidfile`."
msgstr ""

#: ../../whatsnew-3.1.rst:1017
msgid "MongoDB Backend: Can now be configured using an URL:"
msgstr ""

#: ../../whatsnew-3.1.rst:1019
msgid "See :ref:`example-mongodb-result-config`."
msgstr ""

#: ../../whatsnew-3.1.rst:1021
msgid "MongoDB Backend: No longer using deprecated ``pymongo.Connection``."
msgstr ""

#: ../../whatsnew-3.1.rst:1023
msgid "MongoDB Backend: Now disables ``auto_start_request``."
msgstr ""

#: ../../whatsnew-3.1.rst:1025
msgid ""
"MongoDB Backend: Now enables ``use_greenlets`` when eventlet/gevent is used."
msgstr ""

#: ../../whatsnew-3.1.rst:1027
msgid ""
"``subtask()`` / ``maybe_subtask()`` renamed to "
"``signature()``/``maybe_signature()``."
msgstr ""

#: ../../whatsnew-3.1.rst:1030
msgid "Aliases still available for backwards compatibility."
msgstr ""

#: ../../whatsnew-3.1.rst:1032
msgid ""
"The ``correlation_id`` message property is now automatically set to the id "
"of the task."
msgstr ""

#: ../../whatsnew-3.1.rst:1035
msgid ""
"The task message ``eta`` and ``expires`` fields now includes timezone "
"information."
msgstr ""

#: ../../whatsnew-3.1.rst:1038
msgid ""
"All result backends ``store_result``/``mark_as_*`` methods must now accept a"
" ``request`` keyword argument."
msgstr ""

#: ../../whatsnew-3.1.rst:1041
msgid "Events now emit warning if the broken ``yajl`` library is used."
msgstr ""

#: ../../whatsnew-3.1.rst:1043
msgid ""
"The :signal:`celeryd_init` signal now takes an extra keyword argument: "
"``option``."
msgstr ""

#: ../../whatsnew-3.1.rst:1046
msgid ""
"This is the mapping of parsed command line arguments, and can be used to "
"prepare new preload arguments (``app.user_options['preload']``)."
msgstr ""

#: ../../whatsnew-3.1.rst:1049
msgid "New callback: ``Celery.on_configure``."
msgstr ""

#: ../../whatsnew-3.1.rst:1051
msgid ""
"This callback is called when an app is about to be configured (a "
"configuration key is required)."
msgstr ""

#: ../../whatsnew-3.1.rst:1054
msgid "Worker: No longer forks on :sig:`HUP`."
msgstr ""

#: ../../whatsnew-3.1.rst:1056
msgid ""
"This means that the worker will reuse the same pid for better support with "
"external process supervisors."
msgstr ""

#: ../../whatsnew-3.1.rst:1059
msgid "Contributed by Jameel Al-Aziz."
msgstr ""

#: ../../whatsnew-3.1.rst:1061
msgid ""
"Worker: The log message ``Got task from broker â€¦`` was changed to ``Received"
" task â€¦``."
msgstr ""

#: ../../whatsnew-3.1.rst:1064
msgid ""
"Worker: The log message ``Skipping revoked task â€¦`` was changed to "
"``Discarding revoked task â€¦``."
msgstr ""

#: ../../whatsnew-3.1.rst:1067
msgid "Optimization: Improved performance of ``ResultSet.join_native()``."
msgstr ""

#: ../../whatsnew-3.1.rst:1069
msgid "Contributed by Stas Rudakou."
msgstr ""

#: ../../whatsnew-3.1.rst:1071
msgid ""
"The :signal:`task_revoked` signal now accepts new ``request`` argument "
"(Issue #1555)."
msgstr ""

#: ../../whatsnew-3.1.rst:1074
msgid ""
"The revoked signal is dispatched after the task request is removed from the "
"stack, so it must instead use the :class:`~celery.worker.job.Request` object"
" to get information about the task."
msgstr ""

#: ../../whatsnew-3.1.rst:1078
msgid ""
"Worker: New :option:`-X` command line argument to exclude queues (Issue "
"#1399)."
msgstr ""

#: ../../whatsnew-3.1.rst:1081
msgid ""
"The :option:`-X` argument is the inverse of the :option:`-Q` argument and "
"accepts a list of queues to exclude (not consume from):"
msgstr ""

#: ../../whatsnew-3.1.rst:1089
msgid ""
"Adds :envvar:`C_FAKEFORK` envvar for simple init script/multi debugging."
msgstr ""

#: ../../whatsnew-3.1.rst:1091
msgid "This means that you can now do:"
msgstr ""

#: ../../whatsnew-3.1.rst:1097
msgid "or:"
msgstr ""

#: ../../whatsnew-3.1.rst:1103
msgid ""
"to avoid the daemonization step to see errors that are not visible due to "
"missing stdout/stderr."
msgstr ""

#: ../../whatsnew-3.1.rst:1106
msgid ""
"A ``dryrun`` command has been added to the generic init script that enables "
"this option."
msgstr ""

#: ../../whatsnew-3.1.rst:1109
msgid "New public API to push and pop from the current task stack:"
msgstr ""

#: ../../whatsnew-3.1.rst:1111
msgid ""
":func:`celery.app.push_current_task` and "
":func:`celery.app.pop_current_task``."
msgstr ""

#: ../../whatsnew-3.1.rst:1114
msgid ""
"``RetryTaskError`` has been renamed to :exc:`~celery.exceptions.Retry`."
msgstr ""

#: ../../whatsnew-3.1.rst:1116
msgid "The old name is still available for backwards compatibility."
msgstr ""

#: ../../whatsnew-3.1.rst:1118
msgid "New semi-predicate exception :exc:`~celery.exceptions.Reject`."
msgstr ""

#: ../../whatsnew-3.1.rst:1120
msgid ""
"This exception can be raised to ``reject``/``requeue`` the task message, see"
" :ref:`task-semipred-reject` for examples."
msgstr ""

#: ../../whatsnew-3.1.rst:1123
msgid ""
":ref:`Semipredicates <task-semipredicates>` documented: "
"(Retry/Ignore/Reject)."
msgstr ""

#: ../../whatsnew-3.1.rst:1129
msgid "Scheduled Removals"
msgstr ""

#: ../../whatsnew-3.1.rst:1131
msgid ""
"The ``BROKER_INSIST`` setting and the ``insist`` argument to "
"``~@connection`` is no longer supported."
msgstr ""

#: ../../whatsnew-3.1.rst:1134
msgid ""
"The ``CELERY_AMQP_TASK_RESULT_CONNECTION_MAX`` setting is no longer "
"supported."
msgstr ""

#: ../../whatsnew-3.1.rst:1137
msgid "Use :setting:`BROKER_POOL_LIMIT` instead."
msgstr ""

#: ../../whatsnew-3.1.rst:1139
msgid "The ``CELERY_TASK_ERROR_WHITELIST`` setting is no longer supported."
msgstr ""

#: ../../whatsnew-3.1.rst:1141
msgid ""
"You should set the :class:`~celery.utils.mail.ErrorMail` attribute of the "
"task class instead.  You can also do this using "
":setting:`CELERY_ANNOTATIONS`:"
msgstr ""

#: ../../whatsnew-3.1.rst:1163
msgid ""
"Functions that creates a broker connections no longer supports the "
"``connect_timeout`` argument."
msgstr ""

#: ../../whatsnew-3.1.rst:1166
msgid ""
"This can now only be set using the :setting:`BROKER_CONNECTION_TIMEOUT` "
"setting.  This is because functions no longer create connections directly, "
"but instead get them from the connection pool."
msgstr ""

#: ../../whatsnew-3.1.rst:1170
msgid ""
"The ``CELERY_AMQP_TASK_RESULT_EXPIRES`` setting is no longer supported."
msgstr ""

#: ../../whatsnew-3.1.rst:1172
msgid "Use :setting:`CELERY_TASK_RESULT_EXPIRES` instead."
msgstr ""

#: ../../whatsnew-3.1.rst:1177
msgid "Deprecations"
msgstr ""

#: ../../whatsnew-3.1.rst:1179
msgid "See the :ref:`deprecation-timeline`."
msgstr ""

#: ../../whatsnew-3.1.rst:1184
msgid "Fixes"
msgstr ""

#: ../../whatsnew-3.1.rst:1186
msgid ""
"AMQP Backend: join did not convert exceptions when using the json "
"serializer."
msgstr ""

#: ../../whatsnew-3.1.rst:1189
msgid "Non-abstract task classes are now shared between apps (Issue #1150)."
msgstr ""

#: ../../whatsnew-3.1.rst:1191
msgid ""
"Note that non-abstract task classes should not be used in the new API.  You "
"should only create custom task classes when you use them as a base class in "
"the ``@task`` decorator."
msgstr ""

#: ../../whatsnew-3.1.rst:1195
msgid ""
"This fix ensure backwards compatibility with older Celery versions so that "
"non-abstract task classes works even if a module is imported multiple times "
"so that the app is also instantiated multiple times."
msgstr ""

#: ../../whatsnew-3.1.rst:1199
msgid "Worker: Workaround for Unicode errors in logs (Issue #427)."
msgstr ""

#: ../../whatsnew-3.1.rst:1201
msgid ""
"Task methods: ``.apply_async`` now works properly if args list is None "
"(Issue #1459)."
msgstr ""

#: ../../whatsnew-3.1.rst:1204
msgid ""
"Eventlet/gevent/solo/threads pools now properly handles :exc:`BaseException`"
" errors raised by tasks."
msgstr ""

#: ../../whatsnew-3.1.rst:1207
msgid ""
":control:`autoscale` and :control:`pool_grow`/:control:`pool_shrink` remote "
"control commands will now also automatically increase and decrease the "
"consumer prefetch count."
msgstr ""

#: ../../whatsnew-3.1.rst:1211
msgid "Fix contributed by Daniel M. Taub."
msgstr ""

#: ../../whatsnew-3.1.rst:1213
msgid ""
"``celery control pool_`` commands did not coerce string arguments to int."
msgstr ""

#: ../../whatsnew-3.1.rst:1215
msgid ""
"Redis/Cache chords: Callback result is now set to failure if the group "
"disappeared from the database (Issue #1094)."
msgstr ""

#: ../../whatsnew-3.1.rst:1218
msgid ""
"Worker: Now makes sure that the shutdown process is not initiated multiple "
"times."
msgstr ""

#: ../../whatsnew-3.1.rst:1221
msgid ""
"Multi: Now properly handles both ``-f`` and ``--logfile`` options (Issue "
"#1541)."
msgstr ""

#: ../../whatsnew-3.1.rst:1227
msgid "Internal changes"
msgstr ""

#: ../../whatsnew-3.1.rst:1229
msgid ""
"Module ``celery.task.trace`` has been renamed to :mod:`celery.app.trace`."
msgstr ""

#: ../../whatsnew-3.1.rst:1231
msgid ""
"Module ``celery.concurrency.processes`` has been renamed to "
":mod:`celery.concurrency.prefork`."
msgstr ""

#: ../../whatsnew-3.1.rst:1234
msgid "Classes that no longer fall back to using the default app:"
msgstr ""

#: ../../whatsnew-3.1.rst:1236
msgid "Result backends (:class:`celery.backends.base.BaseBackend`)"
msgstr ""

#: ../../whatsnew-3.1.rst:1237
msgid ":class:`celery.worker.WorkController`"
msgstr ""

#: ../../whatsnew-3.1.rst:1238
msgid ":class:`celery.worker.Consumer`"
msgstr ""

#: ../../whatsnew-3.1.rst:1239
msgid ":class:`celery.worker.job.Request`"
msgstr ""

#: ../../whatsnew-3.1.rst:1241
msgid ""
"This means that you have to pass a specific app when instantiating these "
"classes."
msgstr ""

#: ../../whatsnew-3.1.rst:1244
msgid ""
"``EventDispatcher.copy_buffer`` renamed to "
":meth:`@events.Dispatcher.extend_buffer`."
msgstr ""

#: ../../whatsnew-3.1.rst:1247
msgid ""
"Removed unused and never documented global instance "
"``celery.events.state.state``."
msgstr ""

#: ../../whatsnew-3.1.rst:1250
msgid ""
":class:`@events.Receiver` is now a :class:`kombu.mixins.ConsumerMixin` "
"subclass."
msgstr ""

#: ../../whatsnew-3.1.rst:1253
msgid ""
":class:`celery.apps.worker.Worker` has been refactored as a subclass of "
":class:`celery.worker.WorkController`."
msgstr ""

#: ../../whatsnew-3.1.rst:1256
msgid "This removes a lot of duplicate functionality."
msgstr ""

#: ../../whatsnew-3.1.rst:1258
msgid ""
"The ``Celery.with_default_connection`` method has been removed in favor of "
"``with app.connection_or_acquire``."
msgstr ""

#: ../../whatsnew-3.1.rst:1261
msgid ""
"The ``celery.results.BaseDictBackend`` class has been removed and is "
"replaced by :class:`celery.results.BaseBackend`."
msgstr ""
