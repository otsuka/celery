# 
msgid ""
msgstr ""
"Project-Id-Version: Celery 3.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-10 16:05+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../userguide/signals.rst:5 ../../userguide/signals.rst:62
msgid "Signals"
msgstr ""

#: ../../userguide/signals.rst:10
msgid ""
"Signals allows decoupled applications to receive notifications when certain "
"actions occur elsewhere in the application."
msgstr ""

#: ../../userguide/signals.rst:13
msgid ""
"Celery ships with many signals that you application can hook into to augment"
" behavior of certain actions."
msgstr ""

#: ../../userguide/signals.rst:19
msgid "Basics"
msgstr ""

#: ../../userguide/signals.rst:21
msgid ""
"Several kinds of events trigger signals, you can connect to these signals to"
" perform actions as they trigger."
msgstr ""

#: ../../userguide/signals.rst:24
msgid "Example connecting to the :signal:`after_task_publish` signal:"
msgstr ""

#: ../../userguide/signals.rst:37
msgid ""
"Some signals also have a sender which you can filter by. For example the "
":signal:`after_task_publish` signal uses the task name as a sender, so by "
"providing the ``sender`` argument to "
":class:`~celery.utils.dispatch.signal.Signal.connect` you can connect your "
"handler to be called every time a task with name `\"proj.tasks.add\"` is "
"published:"
msgstr ""

#: ../../userguide/signals.rst:52
msgid ""
"Signals use the same implementation as django.core.dispatch. As a result "
"other keyword parameters (e.g. signal) are passed to all signal handlers by "
"default."
msgstr ""

#: ../../userguide/signals.rst:55
msgid ""
"The best practice for signal handlers is to accept arbitrary keyword "
"arguments (i.e. ``**kwargs``).  That way new celery versions can add "
"additional arguments without breaking user code."
msgstr ""

#: ../../userguide/signals.rst:65
msgid "Task Signals"
msgstr ""

#: ../../userguide/signals.rst:70
msgid "before_task_publish"
msgstr ""

#: ../../userguide/signals.rst:73
msgid ""
"Dispatched before a task is published. Note that this is executed in the "
"process sending the task."
msgstr ""

#: ../../userguide/signals.rst:76 ../../userguide/signals.rst:122
msgid "Sender is the name of the task being sent."
msgstr ""

#: ../../userguide/signals.rst:78
msgid "Provides arguements:"
msgstr ""

#: ../../userguide/signals.rst:80 ../../userguide/signals.rst:126
msgid "body"
msgstr ""

#: ../../userguide/signals.rst:82
msgid "Task message body."
msgstr ""

#: ../../userguide/signals.rst:84
msgid ""
"This is a mapping containing the task message fields (see :ref:`task-"
"message-protocol-v1`)."
msgstr ""

#: ../../userguide/signals.rst:87 ../../userguide/signals.rst:131
msgid "exchange"
msgstr ""

#: ../../userguide/signals.rst:89
msgid "Name of the exchange to send to or a :class:`~kombu.Exchange` object."
msgstr ""

#: ../../userguide/signals.rst:91 ../../userguide/signals.rst:135
msgid "routing_key"
msgstr ""

#: ../../userguide/signals.rst:93
msgid "Routing key to use when sending the message."
msgstr ""

#: ../../userguide/signals.rst:95
msgid "headers"
msgstr ""

#: ../../userguide/signals.rst:97
msgid "Application headers mapping (can be modified)."
msgstr ""

#: ../../userguide/signals.rst:99
msgid "properties"
msgstr ""

#: ../../userguide/signals.rst:101
msgid "Message properties (can be modified)"
msgstr ""

#: ../../userguide/signals.rst:103
msgid "declare"
msgstr ""

#: ../../userguide/signals.rst:105
msgid ""
"List of entities (:class:`~kombu.Exchange`, :class:`~kombu.Queue` or "
":class:~`kombu.binding` to declare before publishing the message.  Can be "
"modified."
msgstr ""

#: ../../userguide/signals.rst:109
msgid "retry_policy"
msgstr ""

#: ../../userguide/signals.rst:111
msgid ""
"Mapping of retry options.  Can be any argument to "
":meth:`kombu.Connection.ensure` and can be modified."
msgstr ""

#: ../../userguide/signals.rst:117
msgid "after_task_publish"
msgstr ""

#: ../../userguide/signals.rst:119
msgid ""
"Dispatched when a task has been sent to the broker. Note that this is "
"executed in the process that sent the task."
msgstr ""

#: ../../userguide/signals.rst:124 ../../userguide/signals.rst:148
#: ../../userguide/signals.rst:171 ../../userguide/signals.rst:201
#: ../../userguide/signals.rst:241 ../../userguide/signals.rst:270
#: ../../userguide/signals.rst:330 ../../userguide/signals.rst:375
#: ../../userguide/signals.rst:429 ../../userguide/signals.rst:506
#: ../../userguide/signals.rst:536 ../../userguide/signals.rst:558
#: ../../userguide/signals.rst:583 ../../userguide/signals.rst:636
msgid "Provides arguments:"
msgstr ""

#: ../../userguide/signals.rst:128
msgid ""
"The task message body, see :ref:`task-message-protocol-v1` for a reference "
"of possible fields that can be defined."
msgstr ""

#: ../../userguide/signals.rst:133
msgid "Name of the exchange or :class:`~kombu.Exchange` object used."
msgstr ""

#: ../../userguide/signals.rst:137
msgid "Routing key used."
msgstr ""

#: ../../userguide/signals.rst:142
msgid "task_prerun"
msgstr ""

#: ../../userguide/signals.rst:144
msgid "Dispatched before a task is executed."
msgstr ""

#: ../../userguide/signals.rst:146
msgid "Sender is the task object being executed."
msgstr ""

#: ../../userguide/signals.rst:151 ../../userguide/signals.rst:174
#: ../../userguide/signals.rst:244
msgid "task_id"
msgstr ""

#: ../../userguide/signals.rst:151 ../../userguide/signals.rst:174
msgid "Id of the task to be executed."
msgstr ""

#: ../../userguide/signals.rst:154 ../../userguide/signals.rst:177
msgid "task"
msgstr ""

#: ../../userguide/signals.rst:154 ../../userguide/signals.rst:177
msgid "The task being executed."
msgstr ""

#: ../../userguide/signals.rst:157 ../../userguide/signals.rst:180
#: ../../userguide/signals.rst:250 ../../userguide/signals.rst:512
msgid "args"
msgstr ""

#: ../../userguide/signals.rst:157
msgid "the tasks positional arguments."
msgstr ""

#: ../../userguide/signals.rst:160 ../../userguide/signals.rst:183
#: ../../userguide/signals.rst:253 ../../userguide/signals.rst:516
msgid "kwargs"
msgstr ""

#: ../../userguide/signals.rst:160 ../../userguide/signals.rst:183
msgid "The tasks keyword arguments."
msgstr ""

#: ../../userguide/signals.rst:165
msgid "task_postrun"
msgstr ""

#: ../../userguide/signals.rst:167
msgid "Dispatched after a task has been executed."
msgstr ""

#: ../../userguide/signals.rst:169 ../../userguide/signals.rst:225
#: ../../userguide/signals.rst:239
msgid "Sender is the task object executed."
msgstr ""

#: ../../userguide/signals.rst:180
msgid "The tasks positional arguments."
msgstr ""

#: ../../userguide/signals.rst:186
msgid "retval"
msgstr ""

#: ../../userguide/signals.rst:186
msgid "The return value of the task."
msgstr ""

#: ../../userguide/signals.rst:188
msgid "state"
msgstr ""

#: ../../userguide/signals.rst:190
msgid "Name of the resulting state."
msgstr ""

#: ../../userguide/signals.rst:195
msgid "task_retry"
msgstr ""

#: ../../userguide/signals.rst:197
msgid "Dispatched when a task will be retried."
msgstr ""

#: ../../userguide/signals.rst:199
msgid "Sender is the task object."
msgstr ""

#: ../../userguide/signals.rst:203 ../../userguide/signals.rst:272
msgid "request"
msgstr ""

#: ../../userguide/signals.rst:205
msgid "The current task request."
msgstr ""

#: ../../userguide/signals.rst:207
msgid "reason"
msgstr ""

#: ../../userguide/signals.rst:209
msgid ""
"Reason for retry (usually an exception instance, but can always be coerced "
"to :class:`str`)."
msgstr ""

#: ../../userguide/signals.rst:212 ../../userguide/signals.rst:259
msgid "einfo"
msgstr ""

#: ../../userguide/signals.rst:214
msgid ""
"Detailed exception information, including traceback (a "
":class:`billiard.einfo.ExceptionInfo` object)."
msgstr ""

#: ../../userguide/signals.rst:221
msgid "task_success"
msgstr ""

#: ../../userguide/signals.rst:223
msgid "Dispatched when a task succeeds."
msgstr ""

#: ../../userguide/signals.rst:227
msgid "Provides arguments"
msgstr ""

#: ../../userguide/signals.rst:230
msgid "result"
msgstr ""

#: ../../userguide/signals.rst:230
msgid "Return value of the task."
msgstr ""

#: ../../userguide/signals.rst:235
msgid "task_failure"
msgstr ""

#: ../../userguide/signals.rst:237
msgid "Dispatched when a task fails."
msgstr ""

#: ../../userguide/signals.rst:244
msgid "Id of the task."
msgstr ""

#: ../../userguide/signals.rst:247
msgid "exception"
msgstr ""

#: ../../userguide/signals.rst:247
msgid "Exception instance raised."
msgstr ""

#: ../../userguide/signals.rst:250
msgid "Positional arguments the task was called with."
msgstr ""

#: ../../userguide/signals.rst:253
msgid "Keyword arguments the task was called with."
msgstr ""

#: ../../userguide/signals.rst:256
msgid "traceback"
msgstr ""

#: ../../userguide/signals.rst:256
msgid "Stack trace object."
msgstr ""

#: ../../userguide/signals.rst:259
msgid "The :class:`celery.datastructures.ExceptionInfo` instance."
msgstr ""

#: ../../userguide/signals.rst:264
msgid "task_revoked"
msgstr ""

#: ../../userguide/signals.rst:266
msgid "Dispatched when a task is revoked/terminated by the worker."
msgstr ""

#: ../../userguide/signals.rst:268
msgid "Sender is the task object revoked/terminated."
msgstr ""

#: ../../userguide/signals.rst:274
msgid ""
"This is a :class:`~celery.worker.job.Request` instance, and not "
"``task.request``.   When using the prefork pool this signal is dispatched in"
" the parent process, so ``task.request`` is not available and should not be "
"used.  Use this object instead, which should have many of the same fields."
msgstr ""

#: ../../userguide/signals.rst:281
msgid "terminated"
msgstr ""

#: ../../userguide/signals.rst:281
msgid "Set to :const:`True` if the task was terminated."
msgstr ""

#: ../../userguide/signals.rst:285
msgid "signum"
msgstr ""

#: ../../userguide/signals.rst:284
msgid ""
"Signal number used to terminate the task. If this is :const:`None` and "
"terminated is :const:`True` then :sig:`TERM` should be assumed."
msgstr ""

#: ../../userguide/signals.rst:287
msgid "expired Set to :const:`True` if the task expired."
msgstr ""

#: ../../userguide/signals.rst:291
msgid "App Signals"
msgstr ""

#: ../../userguide/signals.rst:296
msgid "import_modules"
msgstr ""

#: ../../userguide/signals.rst:298
msgid ""
"This signal is sent when a program (worker, beat, shell) etc, asks for "
"modules in the :setting:`CELERY_INCLUDE` and :setting:`CELERY_IMPORTS` "
"settings to be imported."
msgstr ""

#: ../../userguide/signals.rst:302
msgid "Sender is the app instance."
msgstr ""

#: ../../userguide/signals.rst:305
msgid "Worker Signals"
msgstr ""

#: ../../userguide/signals.rst:310
msgid "celeryd_after_setup"
msgstr ""

#: ../../userguide/signals.rst:312
msgid ""
"This signal is sent after the worker instance is set up, but before it calls"
" run.  This means that any queues from the :option:`-Q` option is enabled, "
"logging has been set up and so on."
msgstr ""

#: ../../userguide/signals.rst:316
msgid ""
"It can be used to e.g. add custom queues that should always be consumed "
"from, disregarding the :option:`-Q` option.  Here's an example that sets up "
"a direct queue for each worker, these queues can then be used to route a "
"task to any specific worker:"
msgstr ""

#: ../../userguide/signals.rst:332
msgid "sender Hostname of the worker."
msgstr ""

#: ../../userguide/signals.rst:338 ../../userguide/signals.rst:383
msgid "instance"
msgstr ""

#: ../../userguide/signals.rst:336 ../../userguide/signals.rst:381
msgid ""
"This is the :class:`celery.apps.worker.Worker` instance to be initialized. "
"Note that only the :attr:`app` and :attr:`hostname` (nodename) attributes "
"have been set so far, and the rest of ``__init__`` has not been executed."
msgstr ""

#: ../../userguide/signals.rst:342 ../../userguide/signals.rst:386
msgid "conf"
msgstr ""

#: ../../userguide/signals.rst:341 ../../userguide/signals.rst:386
msgid "The configuration of the current app."
msgstr ""

#: ../../userguide/signals.rst:347
msgid "celeryd_init"
msgstr ""

#: ../../userguide/signals.rst:349
msgid ""
"This is the first signal sent when :program:`celery worker` starts up. The "
"``sender`` is the host name of the worker, so this signal can be used to "
"setup worker specific configuration:"
msgstr ""

#: ../../userguide/signals.rst:361
msgid ""
"or to set up configuration for multiple workers you can omit specifying a "
"sender when you connect:"
msgstr ""

#: ../../userguide/signals.rst:377
msgid "sender Nodename of the worker."
msgstr ""

#: ../../userguide/signals.rst:388 ../../userguide/signals.rst:642
msgid "options"
msgstr ""

#: ../../userguide/signals.rst:390
msgid ""
"Options passed to the worker from command-line arguments (including "
"defaults)."
msgstr ""

#: ../../userguide/signals.rst:396
msgid "worker_init"
msgstr ""

#: ../../userguide/signals.rst:398
msgid "Dispatched before the worker is started."
msgstr ""

#: ../../userguide/signals.rst:403
msgid "worker_ready"
msgstr ""

#: ../../userguide/signals.rst:405
msgid "Dispatched when the worker is ready to accept work."
msgstr ""

#: ../../userguide/signals.rst:410
msgid "worker_process_init"
msgstr ""

#: ../../userguide/signals.rst:412
msgid "Dispatched in all pool child processes when they start."
msgstr ""

#: ../../userguide/signals.rst:414
msgid ""
"Note that handlers attached to this signal must not be blocking for more "
"than 4 seconds, or the process will be killed assuming it failed to start."
msgstr ""

#: ../../userguide/signals.rst:421
msgid "worker_process_shutdown"
msgstr ""

#: ../../userguide/signals.rst:423
msgid "Dispatched in all pool child processes just before they exit."
msgstr ""

#: ../../userguide/signals.rst:425
msgid ""
"Note: There is no guarantee that this signal will be dispatched, similarly "
"to finally blocks it's impossible to guarantee that handlers will be called "
"at shutdown, and if called it may be interrupted during."
msgstr ""

#: ../../userguide/signals.rst:431
msgid "pid"
msgstr ""

#: ../../userguide/signals.rst:433
msgid "The pid of the child process that is about to shutdown."
msgstr ""

#: ../../userguide/signals.rst:435
msgid "exitcode"
msgstr ""

#: ../../userguide/signals.rst:437
msgid "The exitcode that will be used when the child process exits."
msgstr ""

#: ../../userguide/signals.rst:442
msgid "worker_shutdown"
msgstr ""

#: ../../userguide/signals.rst:444
msgid "Dispatched when the worker is about to shut down."
msgstr ""

#: ../../userguide/signals.rst:447
msgid "Beat Signals"
msgstr ""

#: ../../userguide/signals.rst:452
msgid "beat_init"
msgstr ""

#: ../../userguide/signals.rst:454
msgid ""
"Dispatched when :program:`celery beat` starts (either standalone or "
"embedded). Sender is the :class:`celery.beat.Service` instance."
msgstr ""

#: ../../userguide/signals.rst:460
msgid "beat_embedded_init"
msgstr ""

#: ../../userguide/signals.rst:462
msgid ""
"Dispatched in addition to the :signal:`beat_init` signal when "
":program:`celery beat` is started as an embedded process.  Sender is the "
":class:`celery.beat.Service` instance."
msgstr ""

#: ../../userguide/signals.rst:467
msgid "Eventlet Signals"
msgstr ""

#: ../../userguide/signals.rst:472
msgid "eventlet_pool_started"
msgstr ""

#: ../../userguide/signals.rst:474
msgid "Sent when the eventlet pool has been started."
msgstr ""

#: ../../userguide/signals.rst:476 ../../userguide/signals.rst:486
#: ../../userguide/signals.rst:495 ../../userguide/signals.rst:504
msgid "Sender is the :class:`celery.concurrency.eventlet.TaskPool` instance."
msgstr ""

#: ../../userguide/signals.rst:481
msgid "eventlet_pool_preshutdown"
msgstr ""

#: ../../userguide/signals.rst:483
msgid ""
"Sent when the worker shutdown, just before the eventlet pool is requested to"
" wait for remaining workers."
msgstr ""

#: ../../userguide/signals.rst:491
msgid "eventlet_pool_postshutdown"
msgstr ""

#: ../../userguide/signals.rst:493
msgid ""
"Sent when the pool has been joined and the worker is ready to shutdown."
msgstr ""

#: ../../userguide/signals.rst:500
msgid "eventlet_pool_apply"
msgstr ""

#: ../../userguide/signals.rst:502
msgid "Sent whenever a task is applied to the pool."
msgstr ""

#: ../../userguide/signals.rst:508
msgid "target"
msgstr ""

#: ../../userguide/signals.rst:510
msgid "The target function."
msgstr ""

#: ../../userguide/signals.rst:514
msgid "Positional arguments."
msgstr ""

#: ../../userguide/signals.rst:518
msgid "Keyword arguments."
msgstr ""

#: ../../userguide/signals.rst:521
msgid "Logging Signals"
msgstr ""

#: ../../userguide/signals.rst:526
msgid "setup_logging"
msgstr ""

#: ../../userguide/signals.rst:528
msgid ""
"Celery won't configure the loggers if this signal is connected, so you can "
"use this to completely override the logging configuration with your own."
msgstr ""

#: ../../userguide/signals.rst:532
msgid ""
"If you would like to augment the logging configuration setup by Celery then "
"you can use the :signal:`after_setup_logger` and "
":signal:`after_setup_task_logger` signals."
msgstr ""

#: ../../userguide/signals.rst:539 ../../userguide/signals.rst:564
#: ../../userguide/signals.rst:589
msgid "loglevel"
msgstr ""

#: ../../userguide/signals.rst:539 ../../userguide/signals.rst:564
#: ../../userguide/signals.rst:589
msgid "The level of the logging object."
msgstr ""

#: ../../userguide/signals.rst:542 ../../userguide/signals.rst:567
#: ../../userguide/signals.rst:592
msgid "logfile"
msgstr ""

#: ../../userguide/signals.rst:542 ../../userguide/signals.rst:567
#: ../../userguide/signals.rst:592
msgid "The name of the logfile."
msgstr ""

#: ../../userguide/signals.rst:545 ../../userguide/signals.rst:570
#: ../../userguide/signals.rst:595
msgid "format"
msgstr ""

#: ../../userguide/signals.rst:545 ../../userguide/signals.rst:570
#: ../../userguide/signals.rst:595
msgid "The log format string."
msgstr ""

#: ../../userguide/signals.rst:548 ../../userguide/signals.rst:573
#: ../../userguide/signals.rst:598
msgid "colorize"
msgstr ""

#: ../../userguide/signals.rst:548 ../../userguide/signals.rst:573
#: ../../userguide/signals.rst:598
msgid "Specify if log messages are colored or not."
msgstr ""

#: ../../userguide/signals.rst:553
msgid "after_setup_logger"
msgstr ""

#: ../../userguide/signals.rst:555
msgid ""
"Sent after the setup of every global logger (not task loggers). Used to "
"augment logging configuration."
msgstr ""

#: ../../userguide/signals.rst:561 ../../userguide/signals.rst:586
msgid "logger"
msgstr ""

#: ../../userguide/signals.rst:561 ../../userguide/signals.rst:586
msgid "The logger object."
msgstr ""

#: ../../userguide/signals.rst:578
msgid "after_setup_task_logger"
msgstr ""

#: ../../userguide/signals.rst:580
msgid ""
"Sent after the setup of every single task logger. Used to augment logging "
"configuration."
msgstr ""

#: ../../userguide/signals.rst:601
msgid "Command signals"
msgstr ""

#: ../../userguide/signals.rst:606
msgid "user_preload_options"
msgstr ""

#: ../../userguide/signals.rst:608
msgid ""
"This signal is sent after any of the Celery command line programs are "
"finished parsing the user preload options."
msgstr ""

#: ../../userguide/signals.rst:611
msgid ""
"It can be used to add additional command-line arguments to the "
":program:`celery` umbrella command:"
msgstr ""

#: ../../userguide/signals.rst:632
msgid ""
"Sender is the :class:`~celery.bin.base.Command` instance, which depends on "
"what program was called (e.g. for the umbrella command it will be a "
":class:`~celery.bin.celery.CeleryCommand`) object)."
msgstr ""

#: ../../userguide/signals.rst:638
msgid "app"
msgstr ""

#: ../../userguide/signals.rst:640
msgid "The app instance."
msgstr ""

#: ../../userguide/signals.rst:644
msgid "Mapping of the parsed user preload options (with default values)."
msgstr ""

#: ../../userguide/signals.rst:647
msgid "Deprecated Signals"
msgstr ""

#: ../../userguide/signals.rst:652
msgid "task_sent"
msgstr ""

#: ../../userguide/signals.rst:654
msgid ""
"This signal is deprecated, please use :signal:`after_task_publish` instead."
msgstr ""
