# 
msgid ""
msgstr ""
"Project-Id-Version: Celery 3.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-10 16:05+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../celery/contrib/methods.pydocstring of celery.contrib.methods:2
msgid "celery.contrib.methods"
msgstr ""

#: ../../../celery/contrib/methods.pydocstring of celery.contrib.methods:4
msgid "Task decorator that supports creating tasks out of methods."
msgstr ""

#: ../../../celery/contrib/methods.pydocstring of celery.contrib.methods:7
msgid "Examples"
msgstr ""

#: ../../../celery/contrib/methods.pydocstring of celery.contrib.methods:19
msgid "or with any task decorator:"
msgstr ""

#: ../../../celery/contrib/methods.pydocstring of celery.contrib.methods:33
msgid ""
"The task must use the new Task base class (:class:`celery.Task`), and the "
"old base class using classmethods (``celery.task.Task``, "
"``celery.task.base.Task``)."
msgstr ""

#: ../../../celery/contrib/methods.pydocstring of celery.contrib.methods:37
msgid ""
"This means that you have to use the task decorator from a Celery app "
"instance, and not the old-API:"
msgstr ""

#: ../../../celery/contrib/methods.pydocstring of celery.contrib.methods:65
msgid "Caveats"
msgstr ""

#: ../../../celery/contrib/methods.pydocstring of celery.contrib.methods:67
msgid "Automatic naming won't be able to know what the class name is."
msgstr ""

#: ../../../celery/contrib/methods.pydocstring of celery.contrib.methods:69
msgid ""
"The name will still be module_name + task_name, so two methods with the same"
" name in the same module will collide so that only one task can run:"
msgstr ""

#: ../../../celery/contrib/methods.pydocstring of celery.contrib.methods:87
msgid "would have to be written as:"
msgstr ""
